name: Users
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/users
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{identifier}'
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      identifier:
        name: identifier
        description: ''
        required: true
        example: CTNY4
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      identifier: CTNY4
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/users/profile-update
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: 'Le texte ne peut contenir plus de 255 caractères.'
        required: true
        example: djlowxrlupbbg
        type: string
        enumValues: []
        custom: []
      last_name:
        name: last_name
        description: 'Le texte ne peut contenir plus de 225 caractères.'
        required: true
        example: ppdvgtswjahqsnshecaegstl
        type: string
        enumValues: []
        custom: []
      email:
        name: email
        description: 'Ce champ doit être une adresse e-mail valide. Le texte ne peut contenir plus de 255 caractères.'
        required: true
        example: qhintz@example.net
        type: string
        enumValues: []
        custom: []
      contact:
        name: contact
        description: 'Le texte ne peut contenir plus de 255 caractères.'
        required: true
        example: oyprtswxbfbiu
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      first_name: djlowxrlupbbg
      last_name: ppdvgtswjahqsnshecaegstl
      email: qhintz@example.net
      contact: oyprtswxbfbiu
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/users/change-password
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Change the password of the authenticated user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      current_password:
        name: current_password
        description: 'The current password of the user'
        required: true
        example: rerum
        type: string
        enumValues: []
        custom: []
      password:
        name: password
        description: 'The new password of the user'
        required: true
        example: '.Dmq?q.E8,>`N)'
        type: string
        enumValues: []
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'The new password confirmation of the user'
        required: true
        example: cupiditate
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      current_password: rerum
      password: '.Dmq?q.E8,>`N)'
      password_confirmation: cupiditate
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/users/current
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get the authenticated user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
