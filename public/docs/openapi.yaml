openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'https://cantine-ciprel.ci.ddev.site'
paths:
  /api/cards:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Access Cards'
  '/api/cards/{identifier}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Access Cards'
    parameters:
      -
        in: path
        name: identifier
        description: ''
        example: CARD000
        required: true
        schema:
          type: string
  /api/cards/current/assign:
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: '@authenticated'
      parameters: []
      responses: {  }
      tags:
        - 'Access Cards'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: 'The user identifier or id'
                  example: consequuntur
                identifier:
                  type: string
                  description: 'The card identifier'
                  example: enim
                quota_breakfast:
                  type: integer
                  description: 'The breakfast quota'
                  example: 14
                quota_lunch:
                  type: integer
                  description: 'The lunch quota'
                  example: 3
                payment_method_id:
                  type: integer
                  description: 'The payment method id'
                  example: 20
              required:
                - user_id
                - identifier
                - quota_breakfast
                - quota_lunch
                - payment_method_id
  /api/cards/temporary/assign:
    post:
      summary: 'Assign a temporary card to a user'
      operationId: assignATemporaryCardToAUser
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Access Cards'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: 'The user identifier or id'
                  example: quia
                identifier:
                  type: string
                  description: 'The card identifier'
                  example: et
                expires_at:
                  type: date
                  description: 'The card expiration date'
                  example: corrupti
              required:
                - user_id
                - identifier
                - expires_at
  /api/reload/cards:
    post:
      summary: ''
      operationId: postApiReloadCards
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Access Cards'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                identifier:
                  type: string
                  description: ''
                  example: sapiente
                quota_type:
                  type: string
                  description: ''
                  example: optio
                quota:
                  type: integer
                  description: 'La valeur doit être supérieure ou égale à 0. La valeur ne peut être supérieure à 25.'
                  example: 14
              required:
                - identifier
                - quota_type
                - quota
  /api/cards/current:
    post:
      summary: 'Get the current access card of a users'
      operationId: getTheCurrentAccessCardOfAUsers
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Access Cards'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                identifier:
                  type: string
                  description: ''
                  example: nam
              required:
                - identifier
  /api/orders/lunch-completed:
    post:
      summary: ''
      operationId: postApiOrdersLunchCompleted
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                identifier:
                  type: string
                  description: ''
                  example: ut
              required:
                - identifier
      security: []
  /api/orders/breakfast-completed:
    post:
      summary: ''
      operationId: postApiOrdersBreakfastCompleted
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                identifier:
                  type: string
                  description: ''
                  example: qui
              required:
                - identifier
      security: []
  /api/orders/cancel-validation:
    post:
      summary: ''
      operationId: postApiOrdersCancelValidation
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order_identifier:
                  type: string
                  description: ''
                  example: voluptatem
              required:
                - order_identifier
      security: []
  /api/menus:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/menus/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the menu.'
        example: 1
        required: true
        schema:
          type: integer
  /api/cards/link-temporary-card:
    post:
      summary: ''
      operationId: postApiCardsLinkTemporaryCard
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: ''
                  example: blanditiis
                identifier:
                  type: string
                  description: ''
                  example: quibusdam
                expires_at:
                  type: string
                  description: "Ce n'est pas une date valide. La date doit être postérieure ou égale au <code>today</code>."
                  example: '2050-05-20'
              required:
                - user_id
                - identifier
      security: []
  /api/dishes:
    get:
      summary: ''
      operationId: getApiDishes
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/login:
    post:
      summary: ''
      operationId: postApiLogin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/orders:
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                identifier:
                  type: string
                  description: 'The card identifier'
                  example: quod
                dish_id:
                  type: integer
                  description: 'The dish id'
                  example: 12
              required:
                - identifier
                - dish_id
  /api/completed/orders:
    get:
      summary: 'Mark order as completed'
      operationId: markOrderAsCompleted
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Orders
  /api/users:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Users
  '/api/users/{identifier}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Users
    parameters:
      -
        in: path
        name: identifier
        description: ''
        example: CTNY4
        required: true
        schema:
          type: string
  /api/users/profile-update:
    post:
      summary: ''
      operationId: postApiUsersProfileUpdate
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: 'Le texte ne peut contenir plus de 255 caractères.'
                  example: djlowxrlupbbg
                last_name:
                  type: string
                  description: 'Le texte ne peut contenir plus de 225 caractères.'
                  example: ppdvgtswjahqsnshecaegstl
                email:
                  type: string
                  description: 'Ce champ doit être une adresse e-mail valide. Le texte ne peut contenir plus de 255 caractères.'
                  example: qhintz@example.net
                contact:
                  type: string
                  description: 'Le texte ne peut contenir plus de 255 caractères.'
                  example: oyprtswxbfbiu
              required:
                - first_name
                - last_name
                - email
                - contact
  /api/users/change-password:
    post:
      summary: 'Change the password of the authenticated user'
      operationId: changeThePasswordOfTheAuthenticatedUser
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                current_password:
                  type: string
                  description: 'The current password of the user'
                  example: rerum
                password:
                  type: string
                  description: 'The new password of the user'
                  example: '.Dmq?q.E8,>`N)'
                password_confirmation:
                  type: string
                  description: 'The new password confirmation of the user'
                  example: cupiditate
              required:
                - current_password
                - password
                - password_confirmation
  /api/users/current:
    post:
      summary: 'Get the authenticated user'
      operationId: getTheAuthenticatedUser
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Users
tags:
  -
    name: 'Access Cards'
    description: ''
  -
    name: Endpoints
    description: ''
  -
    name: Orders
    description: ''
  -
    name: Users
    description: ''
