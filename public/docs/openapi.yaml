openapi: 3.0.3
info:
  title: 'Ciprel Cantine - Application de gestion de la cantine'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'https://cantine-ciprel.ci.ddev.site'
paths:
  /api/orders/lunch-completed:
    post:
      summary: ''
      operationId: postApiOrdersLunchCompleted
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                identifier:
                  type: string
                  description: ''
                  example: aut
              required:
                - identifier
      security: []
  /api/orders/breakfast-completed:
    post:
      summary: ''
      operationId: postApiOrdersBreakfastCompleted
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                identifier:
                  type: string
                  description: ''
                  example: quis
              required:
                - identifier
      security: []
  /api/orders/cancel-validation:
    post:
      summary: ''
      operationId: postApiOrdersCancelValidation
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order_identifier:
                  type: string
                  description: ''
                  example: debitis
              required:
                - order_identifier
      security: []
  /api/menus:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/menus/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the menu.'
        example: 1
        required: true
        schema:
          type: integer
  /api/cards/link-temporary-card:
    post:
      summary: ''
      operationId: postApiCardsLinkTemporaryCard
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: ''
                  example: aspernatur
                identifier:
                  type: string
                  description: ''
                  example: et
                expires_at:
                  type: string
                  description: "Ce n'est pas une date valide. La date doit être postérieure ou égale au <code>today</code>."
                  example: '2049-01-02'
              required:
                - user_id
                - identifier
      security: []
  /api/login:
    post:
      summary: 'Nouvelle connexion'
      operationId: nouvelleConnexion
      description: "Cette endpoint permet de se connecter à l'application mobile"
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/orders:
    post:
      summary: 'Effectuer une commande pour un tiers'
      operationId: effectuerUneCommandePourUnTiers
      description: 'Cette endpoint permet de passer une commande pour un tiers'
      parameters: []
      responses: {  }
      tags:
        - 'Gesion des commandes'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                identifier:
                  type: string
                  description: ''
                  example: enim
                dish_id:
                  type: string
                  description: ''
                  example: rerum
              required:
                - identifier
                - dish_id
  /api/completed/orders:
    get:
      summary: ''
      operationId: getApiCompletedOrders
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Gesion des commandes'
  /api/cards:
    get:
      summary: 'Retourne la liste des cartes RFID'
      operationId: retourneLaListeDesCartesRFID
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Gestion des cartes'
  '/api/cards/{identifier}':
    get:
      summary: "Afficher les informations d'une carte RFID"
      operationId: afficherLesInformationsDuneCarteRFID
      description: "Cette endpoint permet d'afficher les informations d'une carte RFID"
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Gestion des cartes'
    parameters:
      -
        in: path
        name: identifier
        description: ''
        example: CARD000
        required: true
        schema:
          type: string
  /api/cards/current/assign:
    post:
      summary: 'Assignation de Carte primaire'
      operationId: assignationDeCartePrimaire
      description: "Cette endpoint permet d'assigner une carte primaire(Carte courante) à un utilisateur"
      parameters: []
      responses: {  }
      tags:
        - 'Gestion des cartes'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: ''
                  example: sint
                identifier:
                  type: string
                  description: 'Le texte ne peut contenir plus de 255 caractères.'
                  example: derhoaxfebkcpwysuvdfulrxx
                quota_breakfast:
                  type: integer
                  description: 'La valeur doit être supérieure ou égale à 0. La valeur ne peut être supérieure à 25.'
                  example: 15
                quota_lunch:
                  type: integer
                  description: 'La valeur doit être supérieure ou égale à 0. La valeur ne peut être supérieure à 25.'
                  example: 11
                payment_method_id:
                  type: string
                  description: ''
                  example: null
              required:
                - user_id
                - identifier
  /api/cards/temporary/assign:
    post:
      summary: 'Assigner une carte temporaire'
      operationId: assignerUneCarteTemporaire
      description: "Cette endpoint permet d'assigner une carte temporaire à un utilisateur"
      parameters: []
      responses: {  }
      tags:
        - 'Gestion des cartes'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: 'The user identifier or id'
                  example: libero
                access_card_identifier:
                  type: string
                  description: 'Le texte ne peut contenir plus de 255 caractères.'
                  example: xcktzczkulqdsarh
                expires_at:
                  type: date
                  description: 'The card expiration date'
                  example: ut
                identifier:
                  type: string
                  description: 'The card identifier'
                  example: consequatur
              required:
                - user_id
                - access_card_identifier
                - expires_at
                - identifier
  /api/reload/cards:
    post:
      summary: 'Recharger une carte RFID'
      operationId: rechargerUneCarteRFID
      description: 'Cette endpoint permet de recharger une carte RFID'
      parameters: []
      responses: {  }
      tags:
        - 'Gestion des cartes'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                access_card_identifier:
                  type: string
                  description: ''
                  example: commodi
                quota_type:
                  type: string
                  description: ''
                  example: quota_breakfast
                  enum:
                    - quota_lunch
                    - quota_breakfast
                quota:
                  type: integer
                  description: 'La valeur doit être supérieure ou égale à 0. La valeur ne peut être supérieure à 25.'
                  example: 7
              required:
                - access_card_identifier
                - quota_type
                - quota
  /api/cards/current:
    post:
      summary: "Recuperer de la carte courante de l'utilisateur"
      operationId: recupererDeLaCarteCouranteDeLutilisateur
      description: "Cette endpoint permet de recuperer la carte courante d'un utilisateur"
      parameters: []
      responses: {  }
      tags:
        - 'Gestion des cartes'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                identifier:
                  type: string
                  description: ''
                  example: eaque
              required:
                - identifier
  /api/dishes:
    get:
      summary: 'Liste des plats'
      operationId: listeDesPlats
      description: 'Cette endpoint permet de récupérer la liste des plats du jour'
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Gestion des plats'
  /api/users:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Users
  '/api/users/{identifier}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Users
    parameters:
      -
        in: path
        name: identifier
        description: ''
        example: IS9RH
        required: true
        schema:
          type: string
  /api/users/profile-update:
    post:
      summary: ''
      operationId: postApiUsersProfileUpdate
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: 'Le texte ne peut contenir plus de 255 caractères.'
                  example: ixmpsxxozgfzgxysllzzzohdu
                last_name:
                  type: string
                  description: 'Le texte ne peut contenir plus de 225 caractères.'
                  example: lsewwvgteiibddhduuxjk
                email:
                  type: string
                  description: 'Ce champ doit être une adresse e-mail valide. Le texte ne peut contenir plus de 255 caractères.'
                  example: oreilly.nakia@example.com
                contact:
                  type: string
                  description: 'Le texte ne peut contenir plus de 255 caractères.'
                  example: wz
              required:
                - first_name
                - last_name
                - email
                - contact
  /api/users/change-password:
    post:
      summary: 'Change the password of the authenticated user'
      operationId: changeThePasswordOfTheAuthenticatedUser
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                current_password:
                  type: string
                  description: 'The current password of the user'
                  example: quasi
                password:
                  type: string
                  description: 'The new password of the user'
                  example: ZP@yNU|
                password_confirmation:
                  type: string
                  description: 'The new password confirmation of the user'
                  example: vero
              required:
                - current_password
                - password
                - password_confirmation
  /api/users/current:
    post:
      summary: 'Get the authenticated user'
      operationId: getTheAuthenticatedUser
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Users
tags:
  -
    name: Endpoints
    description: ''
  -
    name: 'Gesion des commandes'
    description: "\nEndpoints pour la gestion des commandes"
  -
    name: 'Gestion des cartes'
    description: ''
  -
    name: 'Gestion des plats'
    description: "\nEndpoints pour la gestion des plats de la cantine"
  -
    name: Users
    description: ''
